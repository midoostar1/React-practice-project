{"ast":null,"code":"var _jsxFileName = \"/Users/midoostar1/Desktop/udemy-practice-project/investment-calculator/src/components/InvestmentTable.js\";\nimport React from \"react\";\nimport styles from \"./investmentTable.module.css\";\n\n/* Todo: Show below table conditionally (only once result data is available) */\n/* Show fallback text if no data is available */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction InvestmentTable({\n  data,\n  initialInvestment\n}) {\n  console.log(data);\n  console.log(data[1]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      className: styles.result,\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Year\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 16,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Total Savings\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 17,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Interest (Year)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Total Interest\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Invested Capital\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: data.map((dat, i) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: dat.year\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: dat.savingsEndOfYear\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: dat.yearlyInterest\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: dat.savingsEndOfYear - initialInvestment - dat.yearlyContribution * dat.year\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: initialInvestment + dat.yearlyContribution * dat.year\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n}\n_c = InvestmentTable;\nexport default InvestmentTable;\nvar _c;\n$RefreshReg$(_c, \"InvestmentTable\");","map":{"version":3,"names":["React","styles","jsxDEV","_jsxDEV","InvestmentTable","data","initialInvestment","console","log","children","className","result","fileName","_jsxFileName","lineNumber","columnNumber","map","dat","i","year","savingsEndOfYear","yearlyInterest","yearlyContribution","_c","$RefreshReg$"],"sources":["/Users/midoostar1/Desktop/udemy-practice-project/investment-calculator/src/components/InvestmentTable.js"],"sourcesContent":["import React from \"react\";\nimport styles from \"./investmentTable.module.css\";\n\n/* Todo: Show below table conditionally (only once result data is available) */\n/* Show fallback text if no data is available */\n\nfunction InvestmentTable({ data, initialInvestment }) {\n  console.log(data);\n  console.log(data[1]);\n\n  return (\n    <div>\n      <table className={styles.result}>\n        <thead>\n          <tr>\n            <th>Year</th>\n            <th>Total Savings</th>\n            <th>Interest (Year)</th>\n            <th>Total Interest</th>\n            <th>Invested Capital</th>\n          </tr>\n        </thead>\n        <tbody>\n          {data.map((dat, i) => (\n            <tr>\n              <td>{dat.year}</td>\n              <td>{dat.savingsEndOfYear}</td>\n              <td>{dat.yearlyInterest}</td>\n\n              <td>\n                {dat.savingsEndOfYear -\n                  initialInvestment -\n                  dat.yearlyContribution * dat.year}\n              </td>\n              <td>{initialInvestment + dat.yearlyContribution * dat.year}</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n\nexport default InvestmentTable;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}